(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{124:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return E});var r=n(0),a=n.n(r),l=n(1),o=n(101),u=n(102),i=n(8),c=n(99),s=n(5);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var E=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),h(this,f(t).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(t,a.a.PureComponent),function(e,t,n){t&&p(e.prototype,t),n&&p(e,n)}(t,[{key:"render",value:function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(u.a,null,a.a.createElement(s.b,null,a.a.createElement("p",null,"This package enables you to use Curi alongside Svelte."," ",a.a.createElement("strong",null,"This package relies on the Svelte store.")),a.a.createElement("p",null,"For more information on using Curi with Svelte, please check out the"," ",a.a.createElement(l.b,{name:"Guide",params:{slug:"svelte"}},"Svelte guide"),"."))),a.a.createElement(o.a,null,a.a.createElement(c.a,{tag:"h3",title:"curiStore",id:"curiStore"},a.a.createElement(s.b,null,a.a.createElement("p",null,a.a.createElement(i.b,null,"@curi/svelte")," components rely on being able to access router related values (",a.a.createElement(i.b,null,"router"),", ",a.a.createElement(i.b,null,"response"),", and ",a.a.createElement(i.b,null,"navigation"),") from a Svelte store. While you can set this up manually, the ",a.a.createElement(i.b,null,"curiStore")," will handle this for you."),a.a.createElement("p",null,"This will setup an observer to automatically update the store when new responses are emitted by the router.")),a.a.createElement(s.a,null,"import { curiStore } from '@curi/svelte';\n\nconst router = curi(history, routes);\nconst store = curiStore(router);"),a.a.createElement(s.b,null,a.a.createElement("p",null,"If you already have a store, you can pass it to"," ",a.a.createElement(i.b,null,"curiStore")," and the Curi values will be added to it.")),a.a.createElement(s.a,null,"import { curiStore } from '@curi/svelte';\nimport { Store } from 'svelte/store';\n\nconst router = curi(history, routes);\nconst store = new Store({...});\ncuriStore(router, store);")),a.a.createElement(c.a,{tag:"h3",title:a.a.createElement(i.a,null,"Link"),id:"link"},a.a.createElement(s.b,null,a.a.createElement("p",null,"In order for the components provided by this package to work, they need to have access to your Curi router object.")),a.a.createElement(s.a,{lang:"html"},"<div>\n  <Link to='Home'>Home</Link>\n  <Link to='User' params='{ { userID: 5 } }'>\n    Profile\n  </Link>\n</div>\n<script>\n  import { Link } from '@curi/svelte';\n  export default {\n    components: { Link }\n  }\n<\/script>"),a.a.createElement(c.a,{title:"Props",id:"link-props",tag:"h3"},a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement(s.b,null,a.a.createElement("p",null,a.a.createElement(i.b,null,"to")," - the name of the route to link to")),a.a.createElement(s.a,{lang:"html"},'<Link to="Home">Home</Link>\n\x3c!-- <a href="/">Home</a> --\x3e')),a.a.createElement("li",null,a.a.createElement(s.b,null,a.a.createElement("p",null,a.a.createElement(i.b,null,"params")," - any route params for the linked route")),a.a.createElement(s.a,{lang:"html"},'<Link to="User" params=\'{ { userID: 5 } }\'>\n  Profile\n</Link>\n\x3c!-- <a href="/user/5">Profile</a> --\x3e')),a.a.createElement("li",null,a.a.createElement(s.b,null,a.a.createElement("p",null,a.a.createElement(i.b,null,"hash")," - the hash for the location to link to")),a.a.createElement(s.a,{lang:"html"},'<Link to="Home" hash="test">Home</Link>\n\x3c!-- <a href="/#test">Home</a> --\x3e')),a.a.createElement("li",null,a.a.createElement(s.b,null,a.a.createElement("p",null,a.a.createElement(i.b,null,"query")," - the query for the location to link to")),a.a.createElement(s.a,{lang:"html"},'<Link to="Home" query="one=1">Home</Link>\n\x3c!-- <a href="/?one=1">Home</a> --\x3e')),a.a.createElement("li",null,a.a.createElement(s.b,null,a.a.createElement(i.b,null,"state")," - the state to associated with the location")))))),a.a.createElement(c.a,{title:"Usage",id:"usage"},a.a.createElement(s.b,null,a.a.createElement("p",null,"For rendering your application, you should should have a base component that has any global layout and uses the response to render the correct component(s). Assuming you setup your store using ",a.a.createElement(i.b,null,"curiStore"),", the components can access the router using ",a.a.createElement(i.b,null,"$router")," and the response and navigation using"," ",a.a.createElement(i.b,null,"$curi.response")," and ",a.a.createElement(i.b,null,"$curi.navigation"),".")),a.a.createElement(s.a,{lang:"html"},"\x3c!-- components/App.html --\x3e\n<NavLinks />\n<svelte:component this={$curi.response.body} />\n\n<script>\n  import NavLinks from './NavLinks.html';\n\n  export default {\n\t  components: { NavLinks }\n  };\n<\/script>"),a.a.createElement(s.b,null,a.a.createElement("p",null,"In your index file, setup an observer to render this component, making sure to pass the store to the component.")),a.a.createElement(s.a,null,"import app from './components/app';\n\nconst store = curiStore(router);\n\n// use a one time subscriber for the initial render\nrouter.once(() => {\n  view = new app({ target, store });\n});")))}}]),t}()}}]);