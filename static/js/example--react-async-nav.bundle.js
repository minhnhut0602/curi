(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{79:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return s});var t=a(0),i=a.n(t),r=a(8),l=a(3),o=a(105),c=a(106),m=a(107),u={title:"Async Navigation"};function s(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("h1",null,u.title),i.a.createElement(o.a,{title:"Explanation",id:"explanation"},i.a.createElement(l.b,null,i.a.createElement("p",null,"If the ",i.a.createElement(r.a,null,"Link"),"'s ",i.a.createElement(r.b,null,"children")," prop is a render-invoked function, it will be passed a boolean to indicate whether or not it is currently navigating. We can modify what the function returns to render a loading indicator while waiting for the navigation to complete.")),i.a.createElement(l.a,{lang:"jsx"},"<Link name=\"Movie\" params={{ id: 'some_movie' }}>\n  {navigating => (\n    <React.Fragment>\n      Some Movie {navigating ? <Spinner /> : null}\n    </React.Fragment>\n  )}\n</Link>")),i.a.createElement(o.a,{title:"Live Demo",id:"demo"},i.a.createElement(c.a,{id:"github/pshrmn/curi/tree/master/examples/react/async-nav"})),i.a.createElement(m.a,{path:"react/async-nav"}))}}}]);